openapi: 3.0.3
info:
  title: nju-alley-api
  description: nju alley api
  version: 1.0.6
servers:
  - url: 'https://www.xxh160.com:8443/api'
tags:
  - name: anchor
  - name: post
  - name: user
  - name: comment
paths:
  /anchor/post/{anchorId}:
    get:
      tags:
        - anchor
      summary: 获取该锚点对应的所有post预览
      description: 根据锚点id返回post；返回根据page id分页；sort是排序方式；label是根据标签筛选。
      parameters:
        - name: anchorId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the anchor.
        - name: pageId
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the page.
        - name: sort
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
          description: 排序方式，1是按时间，2是按热度
        - name: label
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 0
              - 1
              - 2
              - 3
            description: 0是全部，1是随笔，2是通知，3是反馈，只能选一个
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostViewVO'
  /post/all:
    get:
      tags:
        - post
      summary: 返回所有帖子预览
      description: sortId决定排序方式，labelId决定标签筛选方式
      parameters:
        - name: sort
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
          description: 排序方式，1是按时间，2是按热度
        - name: label
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 0
              - 1
              - 2
              - 3
          description: 0是全部，1是随笔，2是通知，3是反馈，只能选一个
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostViewVO'
  /post/view/{postId}:
    get:
      tags:
        - post
      summary: 返回特定的帖子
      description: 通过帖子id返回特定的帖子
      parameters:
        - name: postId
          in: path
          description: 帖子id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/PostVO'
  /post/update/{postId}:
    post:
      tags:
        - post
      summary: 更新帖子
      description: 从request body中接收PostDTO来部分重写帖子以达到更新效果
      parameters:
        - name: postId
          in: path
          description: 帖子id
          required: true
          schema:
            type: integer
      requestBody:
        description: post 信息属性
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    default: null
  /post/like:
    post:
      tags:
        - post
      summary: 点赞或者取消点赞帖子
      description: 将对应帖子的点赞数加/减一，通过查询user_like_post数据库来判断是点赞还是取消点赞，并且向user_like_post数据库里加/减一条记录
      parameters:
        - name: postId
          in: query
          description: post id
          required: true
          schema:
            type: integer
        - name: userId
          in: query
          description: liker id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/LikeVO"
  /post/comment:
    post:
      tags:
        - post
      summary: 评论帖子
      description: 通过PostCommentDTO的评论信息新建立一个评论加入数据库，更新post_comment_rel、user_comment_rel数据库以及相关post信息（commentNum等）
      requestBody:
        required: true
        description: comment info
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDTO"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/NewRecordVO"
  /post/create:
    post:
      tags:
        - post
      summary: 新建帖子
      description: 新建一个帖子，更新post数据库和user_post_rel数据库
      requestBody:
        required: true
        description: post info
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDTO"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/NewRecordVO"
  /post/delete/{postId}:
    delete:
      tags:
        - post
      summary: 删除帖子
      description: 删除帖子，更新相应数据库，注意user id在post表中有存
      parameters:
        - name: postId
          in: path
          required: true
          description: post id
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseVO"
  /user/post/{userId}:
    get:
      tags:
        - user
      summary: 返回该用户的所有帖子
      description: 通过user id定位帖子，通过page id定位页数
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: integer
        - name: pageId
          in: query
          required: true
          description: page id
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostVO'
  /user/comment/{userId}:
    get:
      tags:
        - user
      summary: 返回用户的所有评论
      description: 通过user id找到用户所有评论并返回，通过page id定位页数
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: integer
        - name: pageId
          in: query
          required: true
          description: page id
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommentVO'
  /user/like/{userId}:
    get:
      tags:
        - user
      summary: 返回用户所有点赞记录
      description: 通过user_like_*查找点赞记录并返回，page id定位页数
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: integer
        - name: pageId
          in: query
          required: true
          description: page id
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserLikeVO'
  /user/view/{userId}:
    get:
      tags:
        - user
      summary: 查看用户信息
      description: 通过user id定位用户并返回信息
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/UserVO"
  /user/authenticate/{userId}:
    post:
      tags:
        - user
      summary: 官方用户认证
      description: 通过user id定位用户，对比invitation code是否相同。若通过则更新其权限，同时更新invitation_code中user id。
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: integer
      requestBody:
        description: 邀请码 dto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseVO"
  /user/isLike:
    get:
      tags:
        - user
      summary: 获得用户是否点赞
      description: 通过userId定位用户，typeId定位点赞种类，0是post，1是comment，targetId是对应实体的id
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
          required: true
        - name: typeId
          in: query
          schema:
            type: integer
          required: true
        - name: targetId
          in: query
          schema:
            type: integer
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/LikeVO'
  /user/update/{userId}:
    post:
      tags:
        - user
      summary: 更新用户信息
      description: 通过request body的信息更新用户信息
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: integer
      requestBody:
        description: user 信息属性
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseVO"
  /user/login:
    post:
      tags:
        - user
      summary: 用户登录或者注册（第一次使用本系统的微信用户）
      description: 如果用户对应的openid在数据库内有记录则更新name和avatar和gender，反之加记录，同时openid需要调用微信api获取，前端需要传登录code
      parameters:
        - name: code
          in: query
          description: 登录code
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: 用户名
          required: true
          schema:
            type: string
        - name: avatar
          in: query
          description: 用户头像url
          required: true
          schema:
            type: string
        - name: gender
          in: query
          description: 性别
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/NewRecordVO"
  /user/info/{userId}:
    get:
      tags:
        - user
      summary: 返回用户固定信息
      description: 返回用户用户名和头像url，这两者在本系统内不支持修改
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/UserViewVO"
  /comment/comment:
    post:
      tags:
        - comment
      summary: 评论一条评论
      description: 评论一条评论，更新comment、user_comment_rel和comment_rel数据库
      requestBody:
        required: true
        description: comment 信息属性
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/NewRecordVO"
  /comment/like:
    post:
      tags:
        - comment
      summary: 点赞或取消点赞评论
      description: 更新评论信息，同时通过user id定位到user，更新user_like_comment数据库
      parameters:
        - name: userId
          in: query
          schema:
            type: integer
          required: true
        - name: commentId
          in: query
          schema:
            type: integer
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/LikeVO"
  /comment/view/{commentId}:
    get:
      tags:
        - comment
      summary: 获得评论信息
      description: 通过commentId获得评论详细信息，通常和别的api配合使用
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/CommentVO"


components:
  schemas:
    UserVO:
      type: object
      properties:
        id:
          type: integer
        openid:
          type: integer
          description: 微信帐号的唯一标识码
        sign:
          type: string
        name:
          type: string
        avatar:
          type: string
          description: 头像url
        gender:
          type: integer
          description: 0为未知，1为男，2为女
        posts:
          type: array
          items:
            $ref: '#/components/schemas/PostVO'
        auth:
          $ref: "#/components/schemas/UserAuthVO"
    UserDTO:
      type: object
      properties:
        sign:
          type: string
        auth:
          $ref: "#/components/schemas/UserAuthDTO"
    PostVO:
      type: object
      properties:
        id:
          type: integer
          description: post id
        userId:
          type: integer
          description: 创建帖子的用户id
        labelId:
          type: integer
        title:
          type: string
        content:
          type: string
        likeNum:
          type: integer
        CommentNum:
          type: integer
        createTime:
          type: string
          format: date-time
        anchorId:
          type: integer
        langitude:
          type: number
          description: 经度 浮点数注意
        latitude:
          type: number
          description: 纬度
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentVO'
        auth:
          $ref: "#/components/schemas/PostAuthVO"
        hasPicture:
          type: boolean
          description: 是否有图片
        pictureUrl:
          type: string
          description: 图片url，注意只能加一张，目前
    PostViewVO:
      type: object
      properties:
        id:
          type: integer
          description: post id
        langitude:
          type: number
          description: 经度
        latitude:
          type: number
          description: 纬度
    PostDTO:
      type: object
      properties:
        userId:
          type: integer
          description: 创建帖子用户id
        labelId:
          type: integer
        title:
          type: string
        content:
          type: string
        createTime:
          type: string
          format: date-time
        anchorId:
          type: integer
        langitude:
          type: number
          description: 经度
        latitude:
          type: number
          description: 纬度
        auth:
          $ref: "#/components/schemas/PostAuthDTO"
        pictureUrl:
          type: string
          description: 图片url，如果没有直接为null
    CommentDTO:
      type: object
      properties:
        userId:
          type: integer
          description: 评论者的id
        postId:
          type: integer
          description: 父级帖子的id，可以为null
        fatherId:
          type: integer
          description: 父级评论的id，可以为null
        content:
          type: string
        createTime:
          type: string
          format: date-time
    CommentVO:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        postId:
          type: integer
          description: 父级帖子的id，可以为null
        fatherId:
          type: integer
          description: 父级评论的id，可以为null
        content:
          type: string
        likeNum:
          type: integer
        createTime:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: "#/components/schemas/CommentVO"
    ResponseVO:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        data:
          type: object
          default: null
    UserAuthVO:
      type: object
      properties:
        chat:
          type: boolean
        mkfriend:
          type: boolean
        locate:
          type: boolean
        wxInfo:
          type: boolean
        official:
          type: boolean
    UserAuthDTO:
      type: object
      properties:
        chat:
          type: boolean
        mkfriend:
          type: boolean
        locate:
          type: boolean
        wxInfo:
          type: boolean
        official:
          type: boolean
    PostAuthVO:
      type: object
      properties:
        visible:
          type: boolean
        comment:
          type: boolean
    PostAuthDTO:
      type: object
      properties:
        visible:
          type: boolean
        comment:
          type: boolean
    UserActionVO:
      type: object
      description: 用户行为VO，表示某个用户作用与某个实体，比如用户点赞帖子或评论，用户评论帖子或评论，用户用userId标识，被作用的实体用id标识，type表示被作用的类型。
      properties:
        userId:
          type: integer
          description: user id
        type:
          type: integer
          enum:
            - 0
            - 1
          description: 0是post，1是comment
        id:
          type: integer
          description: 被作用的实体的id
    LikeVO:
      type: object
      properties:
        isLike:
          type: boolean
          description: 用户是点赞还是取消点赞
    AuthenticationDTO:
      type: object
      properties:
        code:
          type: string
          description: 邀请码
    NewRecordVO:
      type: object
      properties:
        id:
          type: integer
          description: 新创建的实体id
    UserViewVO:
      type: object
      properties:
        name:
          type: string
          description: 用户名
        avatarUrl:
          type: string
          description: 头像url
